diff a/Server.js b/Server.js	(rejected hunks)
@@ -28,95 +28,185 @@
 
 app.get("/", function (req, res) {
 
-  let name = "";
   
-    // KingRothgard   Origin
+  
+  
+  
+  const kingRothgard = new Promise(resolve => {
     
-    const url = "https://public-api.tracker.gg/v2/apex/standard/profile/origin/KingRothgard?" + process.env.API + "&Accept=json&Accept-Encoding=gzip";
+    //  make the https request
+    console.log("hi kingrothgard");
+
+
+
+// the data you want to send to promise.all to use
+    resolve({kingRothgardData :["x ", "y ", "z"] });
+  });
+  
+  
+  
+  
+  
+  
+  const minaXpotato = new Promise(resolve => {
     
-    https.get(url, function (response) {
+    //  make the https request
+    console.log("hi minaXpotato");
 
-        let chunks = [];
-        let  name = "";
-        let lifeTimeKills = "";
-        let lifeTimeDamage = "";
-        let level = "";
-        let rank = "";
-        let legends=[];
-        let main = "";
-        let mainName;
-        let mainUrl;
 
-        response.on("data", function (data) {
-            chunks.push(data);
-        }).on('end', function () {
 
-            let data = Buffer.concat(chunks);
-            let kingRothgard = JSON.parse(data);
+// the data you want to send to promise.all to use
+    resolve({minaXpotatoData :["x ", "y ", "z"] });
+  });
+  
+  
+  
+  
+  
+  Promise.all([kingRothgard,minaXpotato] )
+  .then(result=> console.log (result));
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+  
+    // let name = "";
+  
+    // // KingRothgard   Origin
+    
+    // const url = "https://public-api.tracker.gg/v2/apex/standard/profile/origin/KingRothgard?" + process.env.API + "&Accept=json&Accept-Encoding=gzip";
+    
+    // https.get(url, function (response) {
+
+    //     let chunks = [];
+    //     let  name = "";
+    //     let lifeTimeKills = "";
+    //     let lifeTimeDamage = "";
+    //     let level = "";
+    //     let rank = "";
+    //     let legends=[];
+    //     let main = "";
+    //     let mainName;
+    //     let mainUrl;
 
+    //     response.on("data", function (data) {
+    //         chunks.push(data);
+    //     }).on('end', function () {
 
-            // putting into varible
-            name = kingRothgard.data.platformInfo.platformUserId;
+    //         let data = Buffer.concat(chunks);
+    //         let kingRothgard = JSON.parse(data);
+
+
+    //         // putting into varible
+    //         name = kingRothgard.data.platformInfo.platformUserId;
            
 
-            lifeTimeKills = kingRothgard.data.segments[0].stats.kills.value;
+    //         lifeTimeKills = kingRothgard.data.segments[0].stats.kills.value;
           
 
-            lifeTimeDamage = kingRothgard.data.segments[0].stats.damage.value;
+    //         lifeTimeDamage = kingRothgard.data.segments[0].stats.damage.value;
            
 
-            level =kingRothgard.data.segments[0].stats.level.value;
+    //         level =kingRothgard.data.segments[0].stats.level.value;
            
 
-            rank = kingRothgard.data.segments[0].stats.rankScore.metadata.iconUrl;
+    //         rank = kingRothgard.data.segments[0].stats.rankScore.metadata.iconUrl;
           
 
 
 
-            var i;
+    //         var i;
 
-            for (i = 1; i <13; i++) {
+    //         for (i = 1; i <13; i++) {
 
-            const kills = kingRothgard.data.segments[i].stats.kills.value;
-            const name = kingRothgard.data.segments[i].metadata.name;
-            const imgUrl = kingRothgard.data.segments[i].metadata.bgImageUrl;
-            const legend = {kills, name, imgUrl};
-            legends.push(legend);
+    //         const kills = kingRothgard.data.segments[i].stats.kills.value;
+    //         const name = kingRothgard.data.segments[i].metadata.name;
+    //         const imgUrl = kingRothgard.data.segments[i].metadata.bgImageUrl;
+    //         const legend = {kills, name, imgUrl};
+    //         legends.push(legend);
 
-            }
+    //         }
 
-            // compare all the values to find the highest 
+    //         // compare all the values to find the highest 
             
 
-            // find the max value in the array of objects
-            var topKills = Math.max.apply(Math,legends.map(function(o){return o.kills;}))
+    //         // find the max value in the array of objects
+    //         var topKills = Math.max.apply(Math,legends.map(function(o){return o.kills;}))
 
-            // uses topKills values and looks throught array of onjects and returns the onbject with that value
-            main = legends.find(function(o){ return o.kills == topKills; })
+    //         // uses topKills values and looks throught array of onjects and returns the onbject with that value
+    //         main = legends.find(function(o){ return o.kills == topKills; })
 
          
 
-            // display name and img as background
-            mainName = main.name;
-            mainUrl = main.imgUrl;
+    //         // display name and img as background
+    //         mainName = main.name;
+    //         mainUrl = main.imgUrl;
             
            
             
             
-            res.render("landingpage", {
-                nameKey: name,
-                lifeTimeKillsKey: lifeTimeKills,
-                lifeTimeDamageKey: lifeTimeDamage,
-                levelKey: level,
-                rankKey: rank,
-                mainNameKey: mainName,
-                mainUrlKey: mainUrl
-    
-             });
-           
-        });
+    //         res.render("landingpage", {
+    //             nameKey: name,
+    //             lifeTimeKillsKey: lifeTimeKills,
+    //             lifeTimeDamageKey: lifeTimeDamage,
+    //             levelKey: level,
+    //             rankKey: rank,
+    //             mainNameKey: mainName,
+    //             mainUrlKey: mainUrl
+                
+
+    //             // end of res.render function 
+    //          });
+        
+             
+
+    //     // end of data processing ana back end
+    //     });
       
-    });
+
+
+    //     // end of get http request going to apex api
+    // });
+
+
+
+
+
+
+
+
+
+
+
+// end of  get "/" root request 
 });
    
 
